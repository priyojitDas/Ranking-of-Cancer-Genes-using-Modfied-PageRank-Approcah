installed.packages("igraph")
install.packages("igraph")
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
biocLite("GEOquery")
biocLite("GEOquery")
install.packages("e1071")
install.packages("caret")
library(Biobase)
library(GEOquery)
library(igraph)
library(e1071)
library(caret)
setwd("~/PR")
tbs <- read.csv("GDS3837.csv",header = TRUE)
ize <- dim(tbs)
tbs <- cbind(tbs,AVGE = apply(tbs[3:size[2]],1,mean))
tbs <- tbs[tbs$AVGE>=6,]
sd_flag <- apply(tbs[3:size[2]],1,sd) >= 0.5
tbs <- tbs[sd_flag,]
tbs <- tbs[order(tbs$IDENTIFIER,-tbs$AVGE),]
tbs <- tbs[!duplicated(tbs$IDENTIFIER),]
GEP <- tbs[,3:size[2]]
rownames(GEP) <- tbs$IDENTIFIER
pin <- read.delim("HPRD_Release9_062910/BINARY_PROTEIN_PROTEIN_INTERACTIONS.txt",sep = "\t",header = FALSE)
tbs <- read.csv("GDS3837.csv",header = TRUE)
size <- dim(tbs)
tbs <- cbind(tbs,AVGE = apply(tbs[3:size[2]],1,mean))
tbs <- tbs[tbs$AVGE>=6,]
sd_flag <- apply(tbs[3:size[2]],1,sd) >= 0.5
tbs <- tbs[sd_flag,]
tbs <- tbs[order(tbs$IDENTIFIER,-tbs$AVGE),]
tbs <- tbs[!duplicated(tbs$IDENTIFIER),]
GEP <- tbs[,3:size[2]]
rownames(GEP) <- tbs$IDENTIFIER
pin <- read.delim("HPRD_Release9_062910/BINARY_PROTEIN_PROTEIN_INTERACTIONS.txt",sep = "\t",header = FALSE)
indx <- c()
for(i in 1:dim(pin)[1]){
print(i)
symbols <- unlist(pin[i,c(1,4)])
if((sum(rownames(GEP)==symbols[1]) + sum(rownames(GEP)==symbols[2])) == 2){
indx <- c(indx,i)
}
}
pEP <- pin[indx,c(1,4)]
colnames(pEP) <- c("Source_A","Source_B")
common_genes <- intersect(rownames(GEP),union(pEP$Source_A,pEP$Source_B))
cgep <- GEP[common_genes,]
rgenes <- read.csv("RankedGenes.csv",header = TRUE)
rgenes <- rgenes[order(-rgenes$Rank),]
target <- c(rep(1,60),rep(0,60))
train <- c(sample(1:60,45),sample(61:120,45))
test <- -train
cgep <- cgep[rgenes$Gene,]
train_data <- cgep[,train]
train_data <- t(train_data)
train_data <- cbind(train_data,class = target[train])
test_data <- cgep[,test]
test_data <- t(test_data)
library(ggplot2)
ggplot(data=cgep[1:5,])
boxplot(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=c(),EXPR=c(),LEVEL=c())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
print(dt)
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,]),LEVEL=c(rep(1,60),rep(0,60)))
print(dtt)
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
print(dt)
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
print(dtt)
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
print(i)
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dim(df)
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
print(i)
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep)
df_ggplt <- function(df){
dim(df)
#dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
#for(i in 1:nrow(df)){
#  print(i)
#  dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
#  dt <- rbind(dt,dtt)
#}
#dim(dt)
}
df_ggplt(cgep)
dim(cgep[1:5,])
df_ggplt <- function(df.t){
dim(df.t)
#dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
#for(i in 1:nrow(df)){
#  print(i)
#  dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
#  dt <- rbind(dt,dtt)
#}
#dim(dt)
}
dim(cgep[1:5,])
df_ggplt(cgep)
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
print(i)
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
dim(dt)
}
df_ggplt(cgep[1:5,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1:5,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=integer())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=c(rep(1,60),rep(0,60)))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1:5,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1:5,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1:10,])
df_ggplt(cgep[1,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,ncol(df)]),LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1,])
cgep[1:5,1:5]
cgep[1:5,120]
cgep[1,120]
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=t(df[i,1:ncol(df)]),LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
cgep[1,120]
df_ggplt(cgep[1,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=df[i,1:ncol(df)],LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1,])
unlist(cgep[1,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
exprs <- df[i,]
names(exprs) <- NULL
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=exprs,LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1,])
dtest <-cgep[1,]
dtest
names(dtest) <- NULL
dtest
dtest <-unlist(cgep[1,])
names(dtest) <- NULL
dtest
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
exprs <- unlist(df[i,])
names(exprs) <- NULL
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=exprs,LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
print(dt)
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1,])
df_ggplt <- function(df){
dt <- data.frame(GENE=character(),EXPR=double(),LEVEL=factor())
for(i in 1:nrow(df)){
exprs <- unlist(df[i,])
names(exprs) <- NULL
dtt <- data.frame(GENE=rep(rownames(df)[i]),EXPR=exprs,LEVEL=as.factor(c(rep(1,60),rep(0,60))))
dt <- rbind(dt,dtt)
}
ggplot(data = dt, aes(x=GENE, y=EXPR)) + geom_boxplot(aes(fill=LEVEL))
}
df_ggplt(cgep[1:10,])
train_data_reduced <- as.matrix(train_data[,c(1:10,4278)])
test_data_reduced <- test_data[,1:10]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
cm
train_data_reduced <- as.matrix(train_data[,c(1:11,4278)])
test_data_reduced <- test_data[,1:10]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
train_data_reduced <- as.matrix(train_data[,c(1:11,4278)])
test_data_reduced <- test_data[,1:11]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
cm
target <- c(rep(1,60),rep(0,60))
train <- c(sample(1:60,45),sample(61:120,45))
test <- -train
cgep <- cgep[rgenes$Gene,]
train_data <- cgep[,train]
train_data <- t(train_data)
train_data <- cbind(train_data,class = target[train])
test_data <- cgep[,test]
test_data <- t(test_data)
df_ggplt(cgep[1:10,])
train_data_reduced <- as.matrix(train_data[,c(1:11,4278)])
test_data_reduced <- test_data[,1:11]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
cm
head(rgenes)
cgep[1:10,1:10]
cgep <- cgep[rgenes$Gene,]
cgep[1:10,1:10]
rgenes <- read.csv("RankedGenes.csv",header = TRUE)
rgenes <- rgenes[order(-rgenes$Rank),]
head(rgenes)
target <- c(rep(1,60),rep(0,60))
cgep[1:10,1:10]
cgep <- GEP[common_genes,]
cgep[1:10,1:5]
train <- c(sample(1:60,45),sample(61:120,45))
test <- -train
cgep <- cgep[rgenes$Gene,]
cgep[1:10,1:5]
train_data <- cgep[,train]
train_data <- t(train_data)
train_data <- cbind(train_data,class = target[train])
test_data <- cgep[,test]
test_data <- t(test_data)
df_ggplt(cgep[1:10,])
train_data_reduced <- as.matrix(train_data[,c(1:11,4278)])
test_data_reduced <- test_data[,1:11]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
cm
train_data_reduced <- as.matrix(train_data[,c(1:10,4278)])
test_data_reduced <- test_data[,1:10]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
cm
target <- c(rep(1,60),rep(0,60))
cgep[1:10,1:5]
cm$table
cm$positive
cm$overall
cm$overall['Accuracy']
cm$overall[0]
for(i in 1:50){
X <- 1:50
train_data_reduced <- as.matrix(train_data[,c(1:i,4278)])
test_data_reduced <- test_data[,1:i]
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
Y <- c(y,cm$overall['Accuracy'])
}
X <- 1:50
Y <- c()
for(i in 1:50){
if(i == 1){
train_data_reduced <- as.matrix(train_data[,c(i,4278)])
test_data_reduced <- test_data[,i]
}
else{
train_data_reduced <- as.matrix(train_data[,c(1:i,4278)])
test_data_reduced <- test_data[,1:i]
}
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
Y <- c(y,cm$overall['Accuracy'])
}
for(i in 2:50){
if(i == 1){
train_data_reduced <- as.matrix(train_data[,c(i,4278)])
test_data_reduced <- test_data[,i]
}
else{
train_data_reduced <- as.matrix(train_data[,c(1:i,4278)])
test_data_reduced <- test_data[,1:i]
}
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
Y <- c(y,cm$overall['Accuracy'])
}
X <- 1:50
Y <- c()
for(i in 2:50){
if(i == 1){
train_data_reduced <- as.matrix(train_data[,c(i,4278)])
test_data_reduced <- test_data[,i]
}
else{
train_data_reduced <- as.matrix(train_data[,c(1:i,4278)])
test_data_reduced <- test_data[,1:i]
}
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced)
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
Y <- c(Y,cm$overall['Accuracy'])
}
plot(X,Y)
X
Y
head(rgenes)
train_data[1:5,1:5]
train_data_reduced[1:5,1:5]
X <- 1:50
Y <- c()
for(i in 2:50){
if(i == 1){
train_data_reduced <- as.matrix(train_data[,c(i,4278)])
test_data_reduced <- test_data[,i]
}
else{
train_data_reduced <- as.matrix(train_data[,c(1:i,4278)])
test_data_reduced <- test_data[,1:i]
}
svm_model <- svm(as.factor(class) ~ .,data = train_data_reduced, method = "svmLinear")
test_pred <- predict(svm_model, newdata = test_data_reduced)
cm <- confusionMatrix(test_pred,as.factor(target[test]))
Y <- c(Y,cm$overall['Accuracy'])
}
plot(X,Y)
Y
